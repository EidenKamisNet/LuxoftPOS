// <auto-generated />
using System;
using LuxoftPOS;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LuxoftPOS.Migrations
{
    [DbContext(typeof(EFCashMastersDbContext))]
    [Migration("20221118091203_Test2")]
    partial class Test2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LuxoftPOS.Model.CashOptions.CurrencyType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Country")
                        .HasColumnType("int");

                    b.Property<string>("CurrencyName")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("IsBaseCurrency")
                        .HasColumnType("bit");

                    b.Property<int>("POSId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("LuxoftPOS.Model.CashOptions.ExchangeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Country")
                        .HasColumnType("int");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int>("Denomination")
                        .HasColumnType("int");

                    b.Property<int>("POSId")
                        .HasColumnType("int");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.ToTable("ExchangeTypes");
                });

            modelBuilder.Entity("LuxoftPOS.Model.POS", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("POSName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("POS");
                });

            modelBuilder.Entity("LuxoftPOS.Model.Parity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Country")
                        .HasColumnType("int");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int>("POSId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ParityDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.ToTable("Parities");
                });

            modelBuilder.Entity("LuxoftPOS.Model.ParityApraisal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ApraisalDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("BaseParityId")
                        .HasColumnType("int");

                    b.Property<int?>("ConvertionParityId")
                        .HasColumnType("int");

                    b.Property<int>("Country")
                        .HasColumnType("int");

                    b.Property<int>("POSId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BaseParityId");

                    b.HasIndex("ConvertionParityId");

                    b.ToTable("ParityApraisals");
                });

            modelBuilder.Entity("LuxoftPOS.Model.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Country")
                        .HasColumnType("int");

                    b.Property<int>("POSId")
                        .HasColumnType("int");

                    b.Property<int?>("PaymentCurrencyId")
                        .HasColumnType("int");

                    b.Property<int>("ShoppingCartId")
                        .HasColumnType("int");

                    b.Property<double>("TotalPayment")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("PaymentCurrencyId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("LuxoftPOS.Model.PaymentCurrencyDenominations", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ExchangeTypeId")
                        .HasColumnType("int");

                    b.Property<int>("PaymentId")
                        .HasColumnType("int");

                    b.Property<int>("PaymentType")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExchangeTypeId");

                    b.HasIndex("PaymentId");

                    b.ToTable("PaymentCurrencyDenominations");
                });

            modelBuilder.Entity("LuxoftPOS.Model.Price", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("BasePriceValue")
                        .HasColumnType("float");

                    b.Property<int>("Country")
                        .HasColumnType("int");

                    b.Property<int>("POSId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PriceDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Prices");
                });

            modelBuilder.Entity("LuxoftPOS.Model.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Country")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("POSId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ProductDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("LuxoftPOS.Model.ShoppingCart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("POSId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ShoppingCartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TotalProducts")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ShoppingCarts");
                });

            modelBuilder.Entity("LuxoftPOS.Model.ShoppingCartDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Country")
                        .HasColumnType("int");

                    b.Property<int>("POSId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("ShoppingCartDetailDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ShoppingCartId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("ShoppingCartId");

                    b.ToTable("ShoppingCartDetails");
                });

            modelBuilder.Entity("LuxoftPOS.Model.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Country")
                        .HasColumnType("int");

                    b.Property<int>("InStock")
                        .HasPrecision(4)
                        .HasColumnType("int");

                    b.Property<int>("POSId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Selled")
                        .HasColumnType("int");

                    b.Property<DateTime>("StockDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("LuxoftPOS.Model.CashOptions.ExchangeType", b =>
                {
                    b.HasOne("LuxoftPOS.Model.CashOptions.CurrencyType", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId");

                    b.Navigation("Currency");
                });

            modelBuilder.Entity("LuxoftPOS.Model.Parity", b =>
                {
                    b.HasOne("LuxoftPOS.Model.CashOptions.CurrencyType", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId");

                    b.Navigation("Currency");
                });

            modelBuilder.Entity("LuxoftPOS.Model.ParityApraisal", b =>
                {
                    b.HasOne("LuxoftPOS.Model.Parity", "BaseParity")
                        .WithMany()
                        .HasForeignKey("BaseParityId");

                    b.HasOne("LuxoftPOS.Model.Parity", "ConvertionParity")
                        .WithMany()
                        .HasForeignKey("ConvertionParityId");

                    b.Navigation("BaseParity");

                    b.Navigation("ConvertionParity");
                });

            modelBuilder.Entity("LuxoftPOS.Model.Payment", b =>
                {
                    b.HasOne("LuxoftPOS.Model.CashOptions.CurrencyType", "PaymentCurrency")
                        .WithMany()
                        .HasForeignKey("PaymentCurrencyId");

                    b.Navigation("PaymentCurrency");
                });

            modelBuilder.Entity("LuxoftPOS.Model.PaymentCurrencyDenominations", b =>
                {
                    b.HasOne("LuxoftPOS.Model.CashOptions.ExchangeType", "ExchangeType")
                        .WithMany()
                        .HasForeignKey("ExchangeTypeId");

                    b.HasOne("LuxoftPOS.Model.Payment", null)
                        .WithMany("PaymentCurrencyDenominations")
                        .HasForeignKey("PaymentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExchangeType");
                });

            modelBuilder.Entity("LuxoftPOS.Model.Price", b =>
                {
                    b.HasOne("LuxoftPOS.Model.Product", null)
                        .WithMany("Prices")
                        .HasForeignKey("ProductId");
                });

            modelBuilder.Entity("LuxoftPOS.Model.ShoppingCartDetail", b =>
                {
                    b.HasOne("LuxoftPOS.Model.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.HasOne("LuxoftPOS.Model.ShoppingCart", null)
                        .WithMany("ShoppingCartDetails")
                        .HasForeignKey("ShoppingCartId");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("LuxoftPOS.Model.Stock", b =>
                {
                    b.HasOne("LuxoftPOS.Model.Product", null)
                        .WithMany("Stocks")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LuxoftPOS.Model.Payment", b =>
                {
                    b.Navigation("PaymentCurrencyDenominations");
                });

            modelBuilder.Entity("LuxoftPOS.Model.Product", b =>
                {
                    b.Navigation("Prices");

                    b.Navigation("Stocks");
                });

            modelBuilder.Entity("LuxoftPOS.Model.ShoppingCart", b =>
                {
                    b.Navigation("ShoppingCartDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
